spring:
  application:
    name: springboot4

  shardingsphere:
    datasource:
      names: sharding0 #,sharding1
      sharding0:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/sharding0?serverTimezone=UTC
          username: root
          password: 123
#      sharding1:
#          type: com.alibaba.druid.pool.DruidDataSource
#          driver-class-name: com.mysql.cj.jdbc.Driver
#          url: jdbc:mysql://localhost:3306/sharding1?serverTimezone=UTC
#          username: root
#          password: 123

    sharding:
        tables:
          #test_202302
            test:
                actual-data-nodes: sharding0.test_$->{2023..2024}0$->{1..9},sharding0.test_$->{2023..2024}$->{10..12} #,sharding1.test_$->{2020..2099}0$->{1..9},sharding1.test_$->{2020..2099}$->{10..12}
                table-strategy:  #分表策略
#                    inline: #内联表达式
#                        sharding-column: update_time #分表字段
#                        algorithm-expression: test_$->{update_time.substring(0,4)}$->{update_time.substring(5,7)} #分表算法
                    standard: #标准分表策略
                        sharding-column: update_time #分表字段
                        precise-algorithm-class-name: com.sharding.PreciseShardingAlgorithmImpl #精准分表算法
                        range-algorithm-class-name: com.sharding.RangeShardingAlgorithmImpl #范围分表算法
#                        allow-range-query-with-inline-sharding: true #允许范围查询

                key-generator: #主键生成策略
                    column: id #主键字段
                    type: SNOWFLAKE #主键生成策略
                    props: #主键生成策略属性
                        worker-id: 1  #主键生成策略属性

    props:
        sql:
            show: true



  #mysql
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    name: defaultDataSource
#    url: jdbc:mysql://localhost:3306/db1?serverTimezone=UTC
#    username: root
#    password: 123
  rsocket:
    server:
      port: 8080

  #redis
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait:  -1
        min-idle: 0
    timeout: 30000
  #rabbitmq
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:mapper/*.xml

